<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" >
<head runat="server">
    <meta http-equiv="content-type" content="text/html; charset=UTF-8"/> 
    <title>KML Sample</title>
    <script src="http://ajax.microsoft.com/ajax/jquery/jquery-1.4.2.min.js" type="text/javascript"></script>
    <script src="http://maps.google.com/maps?file=api&amp;v=2.x&amp;key=ABQIAAAAOPcUey6iJLbyf4XEjgAwkxT2yXp_ZAY8_ufC3CFXhHIE1NvwkxQ6Goh1UXgNXQrZB6T6L6lAYljgOA" type="text/javascript"></script> 
    
    <script type="text/javascript"> 
        
        var map;
        var geoXml;
        var geocoder = null;
        
        function initialize() {
          if (GBrowserIsCompatible()) {
            map = new GMap2(document.getElementById("map_canvas")); 
            map.addControl(new GLargeMapControl());
            //Center above Washington DC
            map.setCenter(new GLatLng(39, -77), 2); 
            map.addControl(new GLargeMapControl());
            geocoder = new GClientGeocoder();
          }
        } 
        
        function LoadKml() {
          geoXml = new GGeoXml("{0}?&format=kml");
          map.addOverlay(geoXml);
          map.setCenter(new GLatLng(38.85, -77.04), 11); 
        }
        
        function LoadAdditionalData() 
        {
            // We don't want KML here.  We want additional "raw data" that we can match up 
            // with the data in the KML using entity.entityid.  To do this we ask for JSON 
            var query = "{0}?&format=json";
            var filter = "";
            var queryUrl = query + filter;
            
            //make jquery call to service
            $.getJSON(queryUrl, null, AdditionalData_Loaded);
        }
        
        function AdditionalData_Loaded(data) 
        {
            //for each row in the table add the cell contents
            for (var i=1; i < data.d.length; i++)
            {
                var result = data.d;
                var address = result[i]['address'] + ' Washington DC';
                var markerText = 'Loaded from json object: <br>' + result[i]['PartitionKey'] + '<br>' + result[i]['entityid'];
                showAddress(address, markerText);
            }
        }
        
        function showAddress(address, markerText) {
          if (geocoder) {
            geocoder.getLatLng(
              address,
              function(point) {
                if (!point) {
                  alert(address + " not found");
                } else {
                  map.setCenter(point, 11);
                  var marker = new GMarker(point);
                  map.addOverlay(marker);
                  marker.openInfoWindowHtml(markerText);
                }
              }
            );
          }
        }
        
        
    </script>
</head>
<body onload="initialize()" onunload="GUnload()">
    <form id="form1" runat="server">
    <div>
        <div id="map_canvas" style="position: relative; width: 900px; height: 500px"></div>  
        </div>
        <p>Click the button below to query the service for KML and use Bing Maps to load the KML on the map.  The 
           default rendering of the KML puts the entity Id into the Bing Maps shape (VEShape) description.  You 
           can use this Id to query the service for more data.</p>
        <input id="btnLoadKml" type="button" value="Load Kml" onclick="LoadKml();" />
        <br />
        <p>Click the button below to query the service for the entities related to the original KML query.  The 
           returned entities will be used to update the Google maps entities</p>
        <input id="btnLoadAdditionalData" type="button" value="Load Additional Data" onclick="LoadAdditionalData();" />
        <br />
    </div>
    </form>
</body>
</html>
